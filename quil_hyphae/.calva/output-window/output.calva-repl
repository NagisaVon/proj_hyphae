; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.8.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.26.0"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
#'quil-hyphae.core/quil-hyphae
clj꞉quil-hyphae.core꞉> 
; Execution error (IllegalStateException) at quil-hyphae.core/eval8230 (form-init13850036280506625186.clj:34).
; Can't pop empty list
clj꞉quil-hyphae.core꞉> 
#'quil-hyphae.core/empty-hyphae
clj꞉quil-hyphae.core꞉> 
()
clj꞉quil-hyphae.core꞉> 
#'quil-hyphae.core/empty-hyphae
clj꞉quil-hyphae.core꞉> 
(4)
clj꞉quil-hyphae.core꞉> 
#'quil-hyphae.core/show-node
clj꞉quil-hyphae.core꞉> 
{:a 1 :b 2}
{:a 1, :b 2}
clj꞉quil-hyphae.core꞉> 
(({:a 1 :b 2} :a) :a)
1
clj꞉quil-hyphae.core꞉> 
(:a ({:a 1 :b 2} :a))
nil
clj꞉quil-hyphae.core꞉> 
(:a {:a 1 :b 2} )
1
clj꞉quil-hyphae.core꞉> 
#'quil-hyphae.core/quil-hyphae
clj꞉quil-hyphae.core꞉> 
(def map1 {:a 1 :b 2})
#'gp.conway/map1
clj꞉gp.conway꞉> 
nil
clj꞉quil-hyphae.core꞉> map1
; Syntax error compiling at (.calva/output-window/output.calva-repl:1:7704).
; Unable to resolve symbol: map1 in this context
clj꞉quil-hyphae.core꞉> 
(def map1 {:a 1 :b 2})
#'quil-hyphae.core/map1
clj꞉quil-hyphae.core꞉> 
map1
{:a 1, :b 2}
clj꞉quil-hyphae.core꞉> 
(update map1 :a 3 :b 5)
; Execution error (ClassCastException) at quil-hyphae.core/eval8269 (form-init13850036280506625186.clj:64).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉quil-hyphae.core꞉> 
(update map1 :a 3)
; Execution error (ClassCastException) at quil-hyphae.core/eval8271 (form-init13850036280506625186.clj:68).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉quil-hyphae.core꞉> 
map1
{:a 1, :b 2}
clj꞉quil-hyphae.core꞉> 
(update map1 :a inc:b dec)
; Syntax error compiling at (.calva/output-window/output.calva-repl:75:1).
; Unable to resolve symbol: inc:b in this context
clj꞉quil-hyphae.core꞉> 
(update map1 :a inc :b dec)
; Execution error (ArityException) at quil-hyphae.core/eval8274 (form-init13850036280506625186.clj:79).
; Wrong number of args (3) passed to: clojure.core/inc
clj꞉quil-hyphae.core꞉> 
(update map1 :a inc)
{:a 2, :b 2}
clj꞉quil-hyphae.core꞉> 
((update map1 :a inc) update :b dec)
; Execution error (ArityException) at quil-hyphae.core/eval8278 (form-init13850036280506625186.clj:86).
; Wrong number of args (3) passed to: clojure.lang.PersistentArrayMap
clj꞉quil-hyphae.core꞉> 
(update (update map1 :a inc) :b dec)
{:a 2, :b 1}
clj꞉quil-hyphae.core꞉> 
(or true true true false true)
true
clj꞉quil-hyphae.core꞉> 
map1
{:a 1, :b 2}
clj꞉quil-hyphae.core꞉> 
(map1:a)
; Syntax error compiling at (.calva/output-window/output.calva-repl:99:1).
; Unable to resolve symbol: map1:a in this context
clj꞉quil-hyphae.core꞉> 
(map1 :a)
1
clj꞉quil-hyphae.core꞉> 
map1 :a
:a
clj꞉quil-hyphae.core꞉> map1
{:a 1, :b 2}
clj꞉quil-hyphae.core꞉> 
(assoc map1 {:a 5 :b 5})
; Execution error (ArityException) at quil-hyphae.core/eval8291 (form-init13850036280506625186.clj:111).
; Wrong number of args (2) passed to: clojure.core/assoc--5416
clj꞉quil-hyphae.core꞉> 
(merge map1 {:a 5 :b 5 :c 1 :d 1})
{:a 5, :b 5}
clj꞉quil-hyphae.core꞉> 
(def map1 {:a 5 :b 5 :c 1 :d 1})
#'quil-hyphae.core/map1
clj꞉quil-hyphae.core꞉> 
(merge map1 {:a 5 :b 5})
{:a 5, :b 5, :c 1, :d 1}
clj꞉quil-hyphae.core꞉> 
(rand-nth [1 -1])
-1
clj꞉quil-hyphae.core꞉> 
(rand-nth [1 -1])
1
clj꞉quil-hyphae.core꞉> 
(rand-nth [1 -1])
1
clj꞉quil-hyphae.core꞉> 
(rand-nth [1 -1])
1
clj꞉quil-hyphae.core꞉> 
(rand-nth [1 -1])
-1
clj꞉quil-hyphae.core꞉> 
(rand-nth [1 -1])
1
clj꞉quil-hyphae.core꞉> 
(rand-nth [1 -1])
1
clj꞉quil-hyphae.core꞉> 
{:a 1 :b (inc a)}
; Syntax error compiling at (.calva/output-window/output.calva-repl:145:10).
; Unable to resolve symbol: a in this context
clj꞉quil-hyphae.core꞉> 
{(let [kaka 1] :a (+ 1 kaka) :b (+ 2 kaka))}
; Syntax error reading source at (REPL:149:45).
; Map literal must contain an even number of forms
clj꞉quil-hyphae.core꞉> 
(let kaka:){}
{}
clj꞉quil-hyphae.core꞉> 
(def t 11)
#'quil-hyphae.core/t
clj꞉quil-hyphae.core꞉> 
(neg t)
; Syntax error compiling at (.calva/output-window/output.calva-repl:159:1).
; Unable to resolve symbol: neg in this context
clj꞉quil-hyphae.core꞉> 
(- t)
-11
clj꞉quil-hyphae.core꞉> 
(def t nil)
#'quil-hyphae.core/t
clj꞉quil-hyphae.core꞉> 
t
nil
clj꞉quil-hyphae.core꞉> 
(nil?? t)
; Syntax error compiling at (.calva/output-window/output.calva-repl:172:1).
; Unable to resolve symbol: nil?? in this context
clj꞉quil-hyphae.core꞉> 
(nil? t)
true
clj꞉quil-hyphae.core꞉> 
(not-nil? t)
; Syntax error compiling at (.calva/output-window/output.calva-repl:179:1).
; Unable to resolve symbol: not-nil? in this context
clj꞉quil-hyphae.core꞉> 
(not(nil? t))
false
clj꞉quil-hyphae.core꞉> 
